/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.23
 * Generated at: 2016-04-09 05:25:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.apps.base.desktop;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.util.*;
import com.unieap.UnieapConstants;
import com.unieap.pojo.User;
import com.unieap.base.SYSConfig;

public final class desk_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/unieap/unieap.jsp", Long.valueOf(1450633063746L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.unieap.UnieapConstants");
    _jspx_imports_classes.add("com.unieap.base.SYSConfig");
    _jspx_imports_classes.add("com.unieap.pojo.User");
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");

	
    String path = request.getContextPath();
    String basePath = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort()
	        + path + "/";
    User user = UnieapConstants.getUser();
    Object error = request.getSession().getAttribute("SPRING_SECURITY_CONTEXT");
    String errorDesc = "";	
    if(error!=null){
		errorDesc = error.toString();
		if(errorDesc.contains("Bad credentials")||errorDesc.contains("UserDetailsService")){
			errorDesc = UnieapConstants.getMessage("user.login.error.usercode");
		}
	}
    

      out.write("\r\n");
      out.write("<!-- 开源框架文件\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"");
      out.print(path);
      out.write("/unieap/js/ext-6.0.1/build/ext-all.js\"></script>\r\n");
      out.write("-->\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"");
      out.print(path);
      out.write("/unieap/js/ext-4.2.1/ext-all.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(path);
      out.write("/unieap/js/ext-4.2.1/locale/ext-lang-");
      out.print(SYSConfig.defaultLanguage);
      out.write(".js\"></script> \r\n");
      out.write("<!-- extjs框架文件 \r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(path);
      out.write("/unieap/js/ext-4.2.1/resources/css/ext-all-neptune.css\" />\r\n");
      out.write("-->\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(path);
      out.write("/unieap/js/ext-4.2.1/resources/css/ext-all-gray.css\" />\r\n");
      out.write("<!-- unieap框架文件 -->\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"");
      out.print(path);
      out.write("/unieap/js/common/unieap.util.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(path);
      out.write("/unieap/js/common/css/common.css\" />\r\n");
      out.write("<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"");
      out.print(path);
      out.write("/unieap/js/common/images/title.png\" media=\"screen\" /> \r\n");
      out.write("<!-- 快码缓存文件,由系统生成-->\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"");
      out.print(path);
      out.write("/sharefolder/common/");
      out.print(user.getUserCode());
      out.write("_button_constants.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"");
      out.print(path);
      out.write("/sharefolder/common/");
      out.print(user.getUserCode());
      out.write("_dicdata_constants.js\"></script>\r\n");
      out.write("<!-- 根目录路径 -->\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar basePathUrl = \"");
      out.print(basePath);
      out.write("\";\r\n");
      out.write("\tvar errorDesc = \"");
      out.print(errorDesc);
      out.write("\";\r\n");
      out.write("\tvar responseText = \"\";\r\n");
      out.write("\tExt.onReady(function(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(errorDesc.indexOf(\"This session has been expired\")>-1){\r\n");
      out.write("\t\t\tExt.MessageBox.show({title: '");
      out.print(UnieapConstants.getMessage("comm.status"));
      out.write("',msg:'This session has been expired',width:120, height:100,\r\n");
      out.write("\t\t\t\tfn: showResult,buttons: Ext.MessageBox.OK,icon:Ext.MessageBox.WARNING});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tExt.Ajax.on('requestcomplete',function(conn, response, options, eOpts){  \r\n");
      out.write("\t\t\tresponseText = response.responseText;\r\n");
      out.write("\t\t\tif(responseText.indexOf('<script type=\"text/javascript\">')>-1){\r\n");
      out.write("\t\t\t\tExt.MessageBox.show({title: '");
      out.print(UnieapConstants.getMessage("comm.status"));
      out.write("',msg:'This session has been expired',width:120, height:100,\r\n");
      out.write("\t\t\t\t\tfn: showTimeOutResult,buttons: Ext.MessageBox.OK,icon:Ext.MessageBox.WARNING});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}else if(responseText.indexOf(\"This session has been expired\")>-1){\r\n");
      out.write("\t\t\t\tExt.MessageBox.show({title: '");
      out.print(UnieapConstants.getMessage("comm.status"));
      out.write("',msg:'This session has been expired',width:120, height:100,\r\n");
      out.write("\t\t\t\t\tfn: showResult,buttons: Ext.MessageBox.OK,icon:Ext.MessageBox.WARNING});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("        });\r\n");
      out.write("\t\tfunction showTimeOutResult(){\r\n");
      out.write("\t\t\tdocument.write(responseText); \r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction showResult(btn){\r\n");
      out.write("\t\t\t window.top.location.href = \"");
      out.print(path);
      out.write("/timeout.jsp\";  \r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write(" <style type=\"text/css\">\r\n");
      out.write("    .add {\r\n");
      out.write("\t    background-image: url(unieap/js/common/images/add.png) !important;\r\n");
      out.write("\t}\r\n");
      out.write("\t.delete {\r\n");
      out.write("\t    background-image: url(unieap/js/common/images/delete.png ) !important;\r\n");
      out.write("\t}\r\n");
      out.write("\t.edit {\r\n");
      out.write("\t    background-image: url(unieap/js/common/images/edit.png ) !important;\r\n");
      out.write("\t}\r\n");
      out.write("\t.save {\r\n");
      out.write("\t    background-image: url(unieap/js/common/images/save.gif ) !important;\r\n");
      out.write("\t}\r\n");
      out.write("\t.find {\r\n");
      out.write("\t    background-image: url(unieap/js/common/images/find.gif ) !important;\r\n");
      out.write("\t}\r\n");
      out.write("\t.search-trigger {\r\n");
      out.write("\t    background-image: url(unieap/js/common/images/search-trigger.png ) !important;\r\n");
      out.write("\t}\r\n");
      out.write("\t.clear-trigger {\r\n");
      out.write("\t    background-image: url(unieap/js/common/images/clear-trigger.gif ) !important;\r\n");
      out.write("\t}\r\n");
      out.write("\t.view {\r\n");
      out.write("\t    background-image: url(unieap/js/common/images/view.gif ) !important;\r\n");
      out.write("\t}\r\n");
      out.write("\t.money-up {\r\n");
      out.write("\t    background-image: url(unieap/js/common/images/money_add.png ) !important;\r\n");
      out.write("\t}\r\n");
      out.write("\t.money-down {\r\n");
      out.write("\t    background-image: url(unieap/js/common/images/money_delete.png ) !important;\r\n");
      out.write("\t}\r\n");
      out.write("\t.folder_go {\r\n");
      out.write("        background-image: url(unieap/js/common/images/folder_go.png) !important;\r\n");
      out.write("    }\r\n");
      out.write("    .menu-show {\r\n");
      out.write("        background-image: url(unieap/js/common/images/menu-show.gif) !important;\r\n");
      out.write("    }\r\n");
      out.write("    .buttons {\r\n");
      out.write("        background-image: url(unieap/js/common/images/buttons.gif) !important;\r\n");
      out.write("    }\r\n");
      out.write("    .leaf {\r\n");
      out.write("        background-image: url(unieap/js/common/images/leaf.png) !important;\r\n");
      out.write("    }\r\n");
      out.write("    .readonly_field{\r\n");
      out.write("\t\tbackground: white repeat-x 0 0;\r\n");
      out.write("\t\tbackground-color:#eaeaea;\r\n");
      out.write("\t}\r\n");
      out.write("\t.refresh {\r\n");
      out.write("\t    background-image: url(unieap/js/common/images/refresh.png) !important;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<!-- unieap用户权限文件 -->\r\n");
      out.write("<meta http-equiv=\"pragma\" content=\"no-cache\">\r\n");
      out.write("<meta http-equiv=\"cache-control\" content=\"no-cache\">\r\n");
      out.write("<meta http-equiv=\"expires\" content=\"0\">\r\n");
      out.write("<meta http-equiv=\"keywords\" content=\"mobile care,mobile service,self-service\">\r\n");
      out.write("<meta http-equiv=\"description\" content=\"unieap system\">\t\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\">    \r\n");
      out.write("<meta name=\"format-detection\" content=\"telephone=no\" /> \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');

	String menuHtml = (String) request.getAttribute("MENU");

      out.write("\r\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Complex Layout</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("p {\r\n");
      out.write("    margin:5px;\r\n");
      out.write("}\r\n");
      out.write(".settings {\r\n");
      out.write("    background-image:url(../shared/icons/fam/folder_wrench.png);\r\n");
      out.write("}\r\n");
      out.write(".nav {\r\n");
      out.write("    background-image:url(../shared/icons/fam/folder_go.png);\r\n");
      out.write("}\r\n");
      out.write(".info {\r\n");
      out.write("    background-image:url(../shared/icons/fam/information.png);\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    var userName = '");
      out.print(user.getUserName());
      out.write("';\r\n");
      out.write("\tvar tabs;\r\n");
      out.write("    var menuJson = ");
      out.print(menuHtml);
      out.write(";\r\n");
      out.write("    function toFrame(href,title){\r\n");
      out.write("\t\topenTab('',href,title,'');\r\n");
      out.write("\t}\r\n");
      out.write("    Ext.onReady(function() {\r\n");
      out.write("        Ext.QuickTips.init();\r\n");
      out.write("        Ext.state.Manager.setProvider(Ext.create('Ext.state.CookieProvider'));\r\n");
      out.write("        //var menuJsons = Ext.JSON.decode();\r\n");
      out.write("        //var menuString = Ext.JSON.ecode(menuHtml);\r\n");
      out.write("        Ext.define('MenuTree', {\r\n");
      out.write("\t        extend: 'Ext.data.Model',\r\n");
      out.write("\t        fields: [{\r\n");
      out.write("\t            name: \"id\",\r\n");
      out.write("\t            type: \"string\"\r\n");
      out.write("\t        },{\r\n");
      out.write("\t            name: \"text\",\r\n");
      out.write("\t            type: \"string\"\r\n");
      out.write("\t        },{\r\n");
      out.write("\t            name: \"href1\",\r\n");
      out.write("\t            type: \"string\"\r\n");
      out.write("\t        },{\r\n");
      out.write("\t            name: \"imgSrc\",\r\n");
      out.write("\t            type: \"string\"\r\n");
      out.write("\t        },{\r\n");
      out.write("\t            name: \"title\",\r\n");
      out.write("\t            type: \"string\"\r\n");
      out.write("\t        }]\r\n");
      out.write("\t    });\r\n");
      out.write("        \r\n");
      out.write("        var store = Ext.create('Ext.data.TreeStore',{\r\n");
      out.write("        \tmodel: 'MenuTree',\r\n");
      out.write("        \troot:{\r\n");
      out.write("        \t\t text:'Menu',\r\n");
      out.write("        \t\t children: menuJson\r\n");
      out.write("        \t\t //children:[{id:11,text:'111a',leaf:true,href:'mdmController.do?method=dic'},{id:12,text:'112c',leaf:true}]\r\n");
      out.write("        \t}\r\n");
      out.write("        });\r\n");
      out.write("        // Go ahead and create the TreePanel now so that we can use it below\r\n");
      out.write("         var treePanel = Ext.create('Ext.tree.Panel', {\r\n");
      out.write("            id: 'tree-panel',\r\n");
      out.write("            region:'north',\r\n");
      out.write("            split: true,\r\n");
      out.write("            loadMask: true,\r\n");
      out.write("            useArrows: true,\r\n");
      out.write("            animate: false,\r\n");
      out.write("            height: '100%',\r\n");
      out.write("            minSize: 150,\r\n");
      out.write("            rootVisible: false,\r\n");
      out.write("            autoScroll: true,\r\n");
      out.write("            store: store,\r\n");
      out.write("            listeners:{\r\n");
      out.write("        \t  itemclick : function(view,record,item,index,e){   \r\n");
      out.write("        \t\te.stopEvent();\r\n");
      out.write("        \t \tif(record.isLeaf()){ \r\n");
      out.write("\t        \t     //record.appendChild({text:\"草他吗的\"}); \r\n");
      out.write("        \t \t\t//openTab(record.data.id,record.data.href,record.data.text,record.data.imgSrc);\r\n");
      out.write("        \t \t\ttoFrame(record.data.href,record.data.text,record.data.text);\r\n");
      out.write("\t            }\r\n");
      out.write("        \t }\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("        var viewport = Ext.create('Ext.Viewport', {\r\n");
      out.write("            id: 'border-example',\r\n");
      out.write("            layout: 'border',\r\n");
      out.write("            items: [\r\n");
      out.write("\t            Ext.create('Ext.Component', {\r\n");
      out.write("\t                region: 'north',\r\n");
      out.write("\t                height: 32, // give north and south regions a height\r\n");
      out.write("\t                autoEl: {\r\n");
      out.write("\t                    tag: 'div',\r\n");
      out.write("\t                    html:'<table><tr><td>Welcome : </td><td>'+userName+'</td><td><marquee scrollAmount=2 width=800 direction=\"right\"><div id=\"tipInfo\">Easy Mobile Platform</div></marquee></td></tr></table>'\r\n");
      out.write("\t                }\r\n");
      out.write("\t            }),\r\n");
      out.write("\t            {\r\n");
      out.write("\t                region: 'west',\r\n");
      out.write("\t                stateId: 'navigation-panel',\r\n");
      out.write("\t                id: 'west-panel', // see Ext.getCmp() below\r\n");
      out.write("\t                title: 'Menu',\r\n");
      out.write("\t                split: false,\r\n");
      out.write("\t                width: 200,\r\n");
      out.write("\t                minWidth: 175,\r\n");
      out.write("\t                maxWidth: 400,\r\n");
      out.write("\t                collapsible: false,\r\n");
      out.write("\t                animCollapse: true,\r\n");
      out.write("\t                margins: '0 0 0 5',\r\n");
      out.write("\t                items:[treePanel]\r\n");
      out.write("\t            },\r\n");
      out.write("\t            tabs = Ext.create('Ext.tab.Panel', {\r\n");
      out.write("\t                readerTo:'center',\r\n");
      out.write("\t                region: 'center', // a center region is ALWAYS required for border layout\r\n");
      out.write("\t                activeTab: 0,\r\n");
      out.write("\t\t\t        defaults :{\r\n");
      out.write("\t\t\t            autoScroll: true,\r\n");
      out.write("\t\t\t            bodyPadding: 10\r\n");
      out.write("\t\t\t        },\r\n");
      out.write("\t                items: []\r\n");
      out.write("\t            })\r\n");
      out.write("\t          ]\r\n");
      out.write("        });\r\n");
      out.write("      });\r\n");
      out.write("\r\n");
      out.write("\t\t/**functions**/\r\n");
      out.write("    \tfunction openTab(id,href,text,imgSrc){\r\n");
      out.write("        \taddTab (true,id,href,text,imgSrc);\r\n");
      out.write("        }\r\n");
      out.write("    \tfunction addTab (closable,id,href,text,imgSrc) {\r\n");
      out.write("\t    \tvar url = basePathUrl+\"/\"+href;\r\n");
      out.write("\t    \tvar windowName = text;\r\n");
      out.write("\t    \tvar imgSrc = imgSrc;\r\n");
      out.write("\t    \tvar tabItems = tabs.items.items;\r\n");
      out.write("\t    \tif(tabItems.length == 0){\r\n");
      out.write("\t    \t\ttabs.add({\r\n");
      out.write("\t\t\t        \ttitle:windowName,\r\n");
      out.write("\t\t\t            xtype: 'panel',\r\n");
      out.write("\t\t\t            html :'<iframe scrolling=\"yes\" frameborder=\"0\" border=\"0\" frameBorder=\"0\" marginwidth=\"0\" marginheight=\"0\" src=\"'+url+'\" style=\"width:100%;height:100%;\"></iframe>',\r\n");
      out.write("\t\t\t        \tclosable: !!closable\r\n");
      out.write("\t\t\t        }).show();\r\n");
      out.write("\t\t        \r\n");
      out.write("\t    \t}else{\r\n");
      out.write("\t    \t\tvar isExist = false;\r\n");
      out.write("\t\t    \tExt.each(tabItems,function(tab){\r\n");
      out.write("\t\t    \t\tif(tab.title == windowName){\r\n");
      out.write("\t\t    \t\t\tisExist = true;\r\n");
      out.write("\t\t    \t\t\ttab.show();\r\n");
      out.write("\t\t    \t\t\t//tab.loader.load();\r\n");
      out.write("\t\t    \t\t}\r\n");
      out.write("\t\t    \t});\r\n");
      out.write("\t\t    \tif(!isExist){\r\n");
      out.write("\t\t\t        tabs.add({\r\n");
      out.write("\t\t\t        \ttitle:windowName,\r\n");
      out.write("\t\t\t            xtype: 'panel',\r\n");
      out.write("\t\t\t            html :'<iframe scrolling=\"yes\" frameborder=\"0\" border=\"0\" frameBorder=\"0\" marginwidth=\"0\" marginheight=\"0\" src=\"'+url+'\" style=\"width:100%;height:100%;\"></iframe>',\r\n");
      out.write("\t\t\t        \tclosable: !!closable\r\n");
      out.write("\t\t\t        }).show();\r\n");
      out.write("\t\t    \t}\r\n");
      out.write("\t    \t}\r\n");
      out.write("\t    }\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
