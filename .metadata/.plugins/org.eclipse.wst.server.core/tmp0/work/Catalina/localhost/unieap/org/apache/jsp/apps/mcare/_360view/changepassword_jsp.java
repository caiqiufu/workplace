/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.23
 * Generated at: 2016-02-25 16:58:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.apps.mcare._360view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.util.*;
import com.unieap.UnieapConstants;
import com.apps.esb.service.bss.vo.macre.customerprofile.CustomerProfileVO;

public final class changepassword_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/unieap/unieap_unlogin.jsp", Long.valueOf(1456419423342L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.apps.esb.service.bss.vo.macre.customerprofile.CustomerProfileVO");
    _jspx_imports_classes.add("com.unieap.UnieapConstants");
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

    String path = request.getContextPath();
	String basePath = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort()
	+ path + "/";

      out.write("\r\n");
      out.write("<link href=\"");
      out.print(path);
      out.write("/apps/mcare/mcare.css\" type=\"text/css\" rel=\"stylesheet\" />\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(path);
      out.write("/unieap/js/jquery/jquery-2.2.0.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar basePathUrl = \"");
      out.print(basePath);
      out.write("\";\r\n");
      out.write("\t$(document).ready(function () { \r\n");
      out.write("\t\tShowbo.Msg.hide();\r\n");
      out.write("\t}); \r\n");
      out.write("</script>\r\n");
      out.write("<!-- unieap用户权限文件 -->\r\n");
      out.write("<meta http-equiv=\"pragma\" content=\"no-cache\">\r\n");
      out.write("<meta http-equiv=\"cache-control\" content=\"no-cache\">\r\n");
      out.write("<meta http-equiv=\"expires\" content=\"0\">\r\n");
      out.write("<meta http-equiv=\"keywords\" content=\"mobile care,mobile service,self-service\">\r\n");
      out.write("<meta http-equiv=\"description\" content=\"unieap system\">\t\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\">    \r\n");
      out.write("<meta name=\"format-detection\" content=\"telephone=no\" /> \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	CustomerProfileVO vo = (CustomerProfileVO) session.getAttribute(UnieapConstants.USER);

      out.write("\r\n");
      out.write("<script src=\"");
      out.print(path);
      out.write("/unieap/js/CryptoJS v3.1.2/rollups/aes.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print(path);
      out.write("/unieap/js/CryptoJS v3.1.2/components/aes.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"");
      out.print(path);
      out.write("/unieap/js/CryptoJS v3.1.2/components/enc-base64-min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"");
      out.print(path);
      out.write("/unieap/js/CryptoJS v3.1.2/components/mode-ecb-min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tfunction onlyNum(){\r\n");
      out.write("\t\tif(!(event.keyCode==46)&&!(event.keyCode==8)&&!(event.keyCode==37)&&!(event.keyCode==39)){\r\n");
      out.write("\t\t\tif(!((event.keyCode>=48&&event.keyCode<=57)||(event.keyCode>=96&&event.keyCode<=105))){\r\n");
      out.write("\t\t\t\tevent.returnValue=false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t$(document).ready(function(){\r\n");
      out.write("\t\t$(\"#sbmtButton\").bind(\"click\",function(){changePassword();});\r\n");
      out.write("\t});\r\n");
      out.write("\t$(document).keypress(function(e) {  \r\n");
      out.write("\t       if(e.which == 13) {  \r\n");
      out.write("\t    \t   changePassword();\r\n");
      out.write("\t       }  \r\n");
      out.write("\t});\r\n");
      out.write("\t$('#oldPassword').tooltipster({\r\n");
      out.write("\t\tcontent: 'please type in 6 digits',\r\n");
      out.write("\t\ttrigger: 'click',\r\n");
      out.write("\t\tposition: 'right'\r\n");
      out.write("\t});\r\n");
      out.write("\t//$('#oldPassword').tooltipster('hide');\r\n");
      out.write("\t\r\n");
      out.write("\t$('#newPassword').tooltipster({\r\n");
      out.write("\t\tcontent: 'please type in 6 digits',\r\n");
      out.write("\t\ttrigger: 'click',\r\n");
      out.write("\t\tposition: 'right'\r\n");
      out.write("\t});\r\n");
      out.write("\t$('#confirmNewPassword').tooltipster({\r\n");
      out.write("\t\tcontent: 'please type in 6 digits',\r\n");
      out.write("\t\ttrigger: 'click',\r\n");
      out.write("\t\tposition: 'right'\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t//$('#newPassword').tooltipster('hide');\r\n");
      out.write("\tfunction checkValueEmpty(inputId){\r\n");
      out.write("\t\tif(inputId=='oldPassword'){\r\n");
      out.write("\t\t\tvar oldPassword = $('#oldPassword').val();\r\n");
      out.write("\t\t\tif(oldPassword == null || oldPassword == '' || oldPassword.length != 6){\r\n");
      out.write("\t\t\t\t$('#oldPassword').tooltipster('show');\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\t$('#oldPassword').tooltipster('hide');\r\n");
      out.write("\t\t\t\treturn true;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}else if(inputId=='newPassword'){\r\n");
      out.write("\t\t\tvar newPassword = $('#newPassword').val();\r\n");
      out.write("\t\t\tif(newPassword == null || newPassword == '' || newPassword.length != 6){\r\n");
      out.write("\t\t\t\t$('#newPassword').tooltipster('show');\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\t$('#newPassword').tooltipster('hide');\r\n");
      out.write("\t\t\t\treturn true;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\tvar confirmNewPassword = $('#confirmNewPassword').val();\r\n");
      out.write("\t\t\tif(confirmNewPassword == null || confirmNewPassword == '' || confirmNewPassword.length != 6){\r\n");
      out.write("\t\t\t\t$('#confirmNewPassword').tooltipster('show');\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\t$('#confirmNewPassword').tooltipster('hide');\r\n");
      out.write("\t\t\t\treturn true;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction checkNewPassword(){\r\n");
      out.write("\t\tvar serviceNumber = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serviceNumber}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("\t\tvar oldPassword = $('#oldPassword').val();\r\n");
      out.write("\t\tvar newPassword = $('#newPassword').val();\r\n");
      out.write("\t\tvar confirmNewPassword = $('#confirmNewPassword').val();\r\n");
      out.write("\t\tif(oldPassword==newPassword){\r\n");
      out.write("\t\t\tShowbo.Msg.show({msg:'<div class=\"showBoxContext\">The new password must be different <br> from the old password.</div>',title:Showbo.Msg.WARNING});\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}else if(newPassword!=confirmNewPassword){\r\n");
      out.write("\t\t\tShowbo.Msg.show({msg:'<div class=\"showBoxContext\">The confirm new password must match <br> the new password.</div>',title:Showbo.Msg.WARNING});\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\treturn true;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction changePassword(){\r\n");
      out.write("\t\tif(checkValueEmpty('oldPassword')&&checkValueEmpty('newPassword')&&checkNewPassword()){\r\n");
      out.write("\t\t\tShowbo.Msg.confirm('Please confirm to change service password',resultFn);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction resultFn(btn){\r\n");
      out.write("\t\t if(btn=='yes'){\r\n");
      out.write("\t\t\tvar serviceNumber = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serviceNumber}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("\t\t\tvar oldPassword = $('#oldPassword').val();\r\n");
      out.write("\t\t\tvar newPassword = $('#newPassword').val();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar keyStr = \"1234567890543210\";\r\n");
      out.write("\t\t\tvar key = CryptoJS.enc.Utf8.parse(keyStr); \r\n");
      out.write("\t\t\tvar encryptedOldPassword = CryptoJS.AES.encrypt(oldPassword, key, { \r\n");
      out.write("\t\t\t\tmode: CryptoJS.mode.ECB,\r\n");
      out.write("\t\t\t\tpadding: CryptoJS.pad.Pkcs7\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\tvar encryptedOldPasswordBase64Str = encryptedOldPassword.toString();\r\n");
      out.write("\t\t\tvar encryptedNewPassword = CryptoJS.AES.encrypt(newPassword, key, { \r\n");
      out.write("\t\t\t\tmode: CryptoJS.mode.ECB,\r\n");
      out.write("\t\t\t\tpadding: CryptoJS.pad.Pkcs7\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\tvar encryptedNewPasswordBase64Str = encryptedNewPassword.toString();\r\n");
      out.write("\t\t\tShowbo.Msg.wait('','Processing');\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t    url: \"");
      out.print(path);
      out.write("/mCareController.do?method=saveChangepassword\",\r\n");
      out.write("\t\t\t    dataType: \"json\",\r\n");
      out.write("\t\t\t    data: { \"serviceNumber\": serviceNumber,'oldPassword':encryptedOldPasswordBase64Str,'newPassword':encryptedNewPasswordBase64Str },\r\n");
      out.write("\t\t\t    beforeSend: function(XMLHttpRequest) {\r\n");
      out.write("\t\t\t    \t//XHR:XMLHttpRequest\r\n");
      out.write("\t\t\t    \t//alert('beforeSend');\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    success: function(result, textStatus) {\r\n");
      out.write("\t\t\t    \tif(result.isSuccess == 'failed'){\r\n");
      out.write("\t\t\t    \t\tShowbo.Msg.alert(result.errorDesc);\r\n");
      out.write("\t                }else{\r\n");
      out.write("\t                \tShowbo.Msg.alert(result.errorDesc);\r\n");
      out.write("\t                }\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    complete: function(XMLHttpRequest, textStatus) {\r\n");
      out.write("\t\t\t    \tShowbo.Msg.hide();\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    error: function(XMLHttpRequest, textStatus, errorThrown) {\r\n");
      out.write("\t\t\t    \talert(textStatus);\r\n");
      out.write("\t\t\t    }\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t }\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("<div class=\"bizPageDisplay\">\r\n");
      out.write("\t<div class=\"bizPageTitle\">\r\n");
      out.write("\t\t<span class=\"bizPageTitleFont\">>>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${menuTitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"fl\">\r\n");
      out.write("\t\t<div class=\"img\">\r\n");
      out.write("\t\t\t<img src=\"");
      out.print(path);
      out.write("/apps/mcare/images/ACCOUNTS_BALANCE_SEARCH.png\"\r\n");
      out.write("\t\t\t\talt=\"my balance\" width=\"120\" />\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"desc\">\r\n");
      out.write("\t\t<div class=\"optionsDesc\">The password used to identify customer\r\n");
      out.write("\t\t\tfor self service, 6 digits included of 0~9.</div>\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t<span class=\"color_6\">My Name : </span><font class='descTitle1'>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${customerName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</font>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t<span class=\"color_6\">Service Number : </span><font\r\n");
      out.write("\t\t\t\tclass='descTitle1'>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serviceNumber}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</font>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t<span class=\"color_6\">Service Type : </span>\r\n");
      out.write("\t\t\tChange self service password.  \r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class='cl'></div>\r\n");
      out.write("\t<div style=\"border-top: 1px solid #00e1e1\"></div>\r\n");
      out.write("\t<div style=\"width:300px;height:50px;align:center;margin: 0 auto; \">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td class=\"tableDispalyOneField\"><span class=\"tableDispalyField\">Service\r\n");
      out.write("\t\t\t\t\t\tNumber</span></td>\r\n");
      out.write("\t\t\t\t<td><span id=\"serviceNumber\" class=\"tableDispalyValue\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serviceNumber}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td class=\"tableDispalyOneField\"><span class=\"tableDispalyField\"><font size='4' color=red>*</font>Old\r\n");
      out.write("\t\t\t\t\t\tPassword</span></td>\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<input id=\"oldPassword\" name=\"oldPassword\" class=\"inputText l mr5\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttype=\"password\" value=\"\" maxlength=\"6\" onkeydown=\"onlyNum();\" onblur=\"checkValueEmpty('oldPassword')\"/>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td class=\"tableDispalyOneField\"><span class=\"tableDispalyField\"><font size='4' color=red>*</font>New\r\n");
      out.write("\t\t\t\t\t\tPassword</span></td>\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<input id=\"newPassword\" name=\"newPassword\"  class=\"inputText l mr5\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttype=\"password\" value=\"\" maxlength=\"6\" onkeydown=\"onlyNum();\" onblur=\"checkValueEmpty('newPassword')\"/>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td class=\"tableDispalyOneField\"><span class=\"tableDispalyField\"><font size='4' color=red>*</font>Confirm New Password</span></td>\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<input id=\"confirmNewPassword\" name=\"confirmNewPassword\"  class=\"inputText l mr5\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttype=\"password\" value=\"\" maxlength=\"6\" onkeydown=\"onlyNum();\" onblur=\"checkValueEmpty('confirmNewPassword')\"/>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan='2' align=\"center\" height=\"20px\">\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan='2' align=\"right\" height=\"20px\">\r\n");
      out.write("\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t<input id=\"sbmtButton\" class=\"inputBut\" type=\"button\" tabindex=\"4\"\r\n");
      out.write("\t\t\t\t\t\t\tvalue=\"Submit\" />\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
