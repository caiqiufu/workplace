/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.23
 * Generated at: 2016-02-25 18:02:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.apps.easymobile;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import com.unieap.UnieapConstants;
import com.unieap.pojo.User;
import com.unieap.base.SYSConfig;

public final class offeringconfig_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/unieap/unieap.jsp", Long.valueOf(1450633063746L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.unieap.UnieapConstants");
    _jspx_imports_classes.add("com.unieap.base.SYSConfig");
    _jspx_imports_classes.add("com.unieap.pojo.User");
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\r\n");
      out.write("\r\n");
      out.write("\r\n");

	
    String path = request.getContextPath();
    String basePath = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort()
	        + path + "/";
    User user = UnieapConstants.getUser();
    Object error = request.getSession().getAttribute("SPRING_SECURITY_CONTEXT");
    String errorDesc = "";	
    if(error!=null){
		errorDesc = error.toString();
		if(errorDesc.contains("Bad credentials")||errorDesc.contains("UserDetailsService")){
			errorDesc = UnieapConstants.getMessage("user.login.error.usercode");
		}
	}
    

      out.write("\r\n");
      out.write("<!-- 开源框架文件\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"");
      out.print(path);
      out.write("/unieap/js/ext-6.0.1/build/ext-all.js\"></script>\r\n");
      out.write("-->\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"");
      out.print(path);
      out.write("/unieap/js/ext-4.2.1/ext-all.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print(path);
      out.write("/unieap/js/ext-4.2.1/locale/ext-lang-");
      out.print(SYSConfig.defaultLanguage);
      out.write(".js\"></script> \r\n");
      out.write("<!-- extjs框架文件 \r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(path);
      out.write("/unieap/js/ext-4.2.1/resources/css/ext-all-neptune.css\" />\r\n");
      out.write("-->\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(path);
      out.write("/unieap/js/ext-4.2.1/resources/css/ext-all-gray.css\" />\r\n");
      out.write("<!-- unieap框架文件 -->\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"");
      out.print(path);
      out.write("/unieap/js/common/unieap.util.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(path);
      out.write("/unieap/js/common/css/common.css\" />\r\n");
      out.write("<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"");
      out.print(path);
      out.write("/unieap/js/common/images/title.png\" media=\"screen\" /> \r\n");
      out.write("<!-- 快码缓存文件,由系统生成-->\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"");
      out.print(path);
      out.write("/sharefolder/common/");
      out.print(user.getUserCode());
      out.write("_button_constants.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"");
      out.print(path);
      out.write("/sharefolder/common/");
      out.print(user.getUserCode());
      out.write("_dicdata_constants.js\"></script>\r\n");
      out.write("<!-- 根目录路径 -->\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar basePathUrl = \"");
      out.print(basePath);
      out.write("\";\r\n");
      out.write("\tvar errorDesc = \"");
      out.print(errorDesc);
      out.write("\";\r\n");
      out.write("\tvar responseText = \"\";\r\n");
      out.write("\tExt.onReady(function(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(errorDesc.indexOf(\"This session has been expired\")>-1){\r\n");
      out.write("\t\t\tExt.MessageBox.show({title: '");
      out.print(UnieapConstants.getMessage("comm.status"));
      out.write("',msg:'This session has been expired',width:120, height:100,\r\n");
      out.write("\t\t\t\tfn: showResult,buttons: Ext.MessageBox.OK,icon:Ext.MessageBox.WARNING});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tExt.Ajax.on('requestcomplete',function(conn, response, options, eOpts){  \r\n");
      out.write("\t\t\tresponseText = response.responseText;\r\n");
      out.write("\t\t\tif(responseText.indexOf('<script type=\"text/javascript\">')>-1){\r\n");
      out.write("\t\t\t\tExt.MessageBox.show({title: '");
      out.print(UnieapConstants.getMessage("comm.status"));
      out.write("',msg:'This session has been expired',width:120, height:100,\r\n");
      out.write("\t\t\t\t\tfn: showTimeOutResult,buttons: Ext.MessageBox.OK,icon:Ext.MessageBox.WARNING});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}else if(responseText.indexOf(\"This session has been expired\")>-1){\r\n");
      out.write("\t\t\t\tExt.MessageBox.show({title: '");
      out.print(UnieapConstants.getMessage("comm.status"));
      out.write("',msg:'This session has been expired',width:120, height:100,\r\n");
      out.write("\t\t\t\t\tfn: showResult,buttons: Ext.MessageBox.OK,icon:Ext.MessageBox.WARNING});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("        });\r\n");
      out.write("\t\tfunction showTimeOutResult(){\r\n");
      out.write("\t\t\tdocument.write(responseText); \r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction showResult(btn){\r\n");
      out.write("\t\t\t window.top.location.href = \"");
      out.print(path);
      out.write("/timeout.jsp\";  \r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write(" <style type=\"text/css\">\r\n");
      out.write("    .add {\r\n");
      out.write("\t    background-image: url(unieap/js/common/images/add.png) !important;\r\n");
      out.write("\t}\r\n");
      out.write("\t.delete {\r\n");
      out.write("\t    background-image: url(unieap/js/common/images/delete.png ) !important;\r\n");
      out.write("\t}\r\n");
      out.write("\t.edit {\r\n");
      out.write("\t    background-image: url(unieap/js/common/images/edit.png ) !important;\r\n");
      out.write("\t}\r\n");
      out.write("\t.save {\r\n");
      out.write("\t    background-image: url(unieap/js/common/images/save.gif ) !important;\r\n");
      out.write("\t}\r\n");
      out.write("\t.find {\r\n");
      out.write("\t    background-image: url(unieap/js/common/images/find.gif ) !important;\r\n");
      out.write("\t}\r\n");
      out.write("\t.search-trigger {\r\n");
      out.write("\t    background-image: url(unieap/js/common/images/search-trigger.png ) !important;\r\n");
      out.write("\t}\r\n");
      out.write("\t.clear-trigger {\r\n");
      out.write("\t    background-image: url(unieap/js/common/images/clear-trigger.gif ) !important;\r\n");
      out.write("\t}\r\n");
      out.write("\t.view {\r\n");
      out.write("\t    background-image: url(unieap/js/common/images/view.gif ) !important;\r\n");
      out.write("\t}\r\n");
      out.write("\t.money-up {\r\n");
      out.write("\t    background-image: url(unieap/js/common/images/money_add.png ) !important;\r\n");
      out.write("\t}\r\n");
      out.write("\t.money-down {\r\n");
      out.write("\t    background-image: url(unieap/js/common/images/money_delete.png ) !important;\r\n");
      out.write("\t}\r\n");
      out.write("\t.folder_go {\r\n");
      out.write("        background-image: url(unieap/js/common/images/folder_go.png) !important;\r\n");
      out.write("    }\r\n");
      out.write("    .menu-show {\r\n");
      out.write("        background-image: url(unieap/js/common/images/menu-show.gif) !important;\r\n");
      out.write("    }\r\n");
      out.write("    .buttons {\r\n");
      out.write("        background-image: url(unieap/js/common/images/buttons.gif) !important;\r\n");
      out.write("    }\r\n");
      out.write("    .leaf {\r\n");
      out.write("        background-image: url(unieap/js/common/images/leaf.png) !important;\r\n");
      out.write("    }\r\n");
      out.write("    .readonly_field{\r\n");
      out.write("\t\tbackground: white repeat-x 0 0;\r\n");
      out.write("\t\tbackground-color:#eaeaea;\r\n");
      out.write("\t}\r\n");
      out.write("\t.refresh {\r\n");
      out.write("\t    background-image: url(unieap/js/common/images/refresh.png) !important;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<!-- unieap用户权限文件 -->\r\n");
      out.write("<meta http-equiv=\"pragma\" content=\"no-cache\">\r\n");
      out.write("<meta http-equiv=\"cache-control\" content=\"no-cache\">\r\n");
      out.write("<meta http-equiv=\"expires\" content=\"0\">\r\n");
      out.write("<meta http-equiv=\"keywords\" content=\"mobile care,mobile service,self-service\">\r\n");
      out.write("<meta http-equiv=\"description\" content=\"unieap system\">\t\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\">    \r\n");
      out.write("<meta name=\"format-detection\" content=\"telephone=no\" /> \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>User</title>\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("    /***file uplaod begin*****************************************************/\r\n");
      out.write("    var allImgExt=\".jpg|.png|\"//å¨é¨å¾çæ ¼å¼ç±»å\r\n");
      out.write("    var allowExt=\".jpg|.png|\" //åè®¸ä¸ä¼ çæä»¶ç±»å Åä¸ºæ éå¶ æ¯ä¸ªæ©å±ååè¾¹è¦å ä¸ä¸ª\"|\" å°åå­æ¯è¡¨ç¤º\r\n");
      out.write("    function checkFileType(fileOriginalName){\r\n");
      out.write("    \tvar fileExt = fileOriginalName.substr(fileOriginalName.lastIndexOf(\".\")).toLowerCase();\r\n");
      out.write("    \tif(allowExt!=0&&allowExt.indexOf(fileExt+\"|\")==-1){\r\n");
      out.write("     \t    return false;\r\n");
      out.write("     \t}else{\r\n");
      out.write("     \t\treturn true;\r\n");
      out.write("     \t}\r\n");
      out.write("    }\r\n");
      out.write("\t/***file upload end**********************************************/\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    Ext.onReady(function(){\r\n");
      out.write("    \tExt.tip.QuickTipManager.init();\t \r\n");
      out.write("    \tExt.define('datamodel', {\r\n");
      out.write("            extend: 'Ext.data.Model',\r\n");
      out.write("            fields:\r\n");
      out.write("            [\r\n");
      out.write("            \t'id','categoryType','categoryTypeDesc','categoreName','categoryDesc','pictureUrl','priceDesc','activeFlag','activeFlagDesc','createDate',\r\n");
      out.write("            \t'createBy','modifyBy','modifyDate','remark','detailUrl','detailHyperlink','planUrl','planHyperlink','questionUrl','questionHyperlink',\r\n");
      out.write("            \t'noteUrl','noteHyperlink'\r\n");
      out.write("            ],\r\n");
      out.write("            idProperty: 'id'\r\n");
      out.write("        });\r\n");
      out.write("    \tvar gridstore = Ext.create('Ext.data.Store', {\r\n");
      out.write("            model: 'datamodel',\r\n");
      out.write("            pageSize: 10,\r\n");
      out.write("            remoteSort: true,\r\n");
      out.write("            proxy:{ type: 'ajax', url: 'easyMobileController.do?method=offerCategoryGrid',\r\n");
      out.write("                reader: \r\n");
      out.write("                {root: 'rows', totalProperty: 'totalCount'},\r\n");
      out.write("                simpleSortMode: true\r\n");
      out.write("            },\r\n");
      out.write("            sorters: [{ property: 'categoreName', direction: 'ASC'}]\r\n");
      out.write("        });\r\n");
      out.write("    \tvar operationItems = [];\r\n");
      out.write("    \tvar selectedRecord;\r\n");
      out.write("    \tif(UnieapButton.Offering_Category_Modify!=null&&UnieapButton.Offering_Category_Modify.abled==true){\r\n");
      out.write("    \t\toperationItems.push({iconCls :'',tooltip:''});\r\n");
      out.write("\t    \toperationItems.push({\r\n");
      out.write("\t    \t\ticonCls : 'edit',\r\n");
      out.write("\t     \t   \ttooltip: '");
      out.print(UnieapConstants.getMessage("comm.modify"));
      out.write("',\r\n");
      out.write("\t           \thandler:function(grid, rowIndex, colIndex){\t\r\n");
      out.write("\t         \t   \tselectedRecord = grid.getStore().getAt(rowIndex);\r\n");
      out.write("\t        \t\tshowForm('Modify',selectedRecord);\r\n");
      out.write("\t           \t}\r\n");
      out.write("\t        });\r\n");
      out.write("    \t}\r\n");
      out.write("       \tvar selModel = Ext.create('Ext.selection.CheckboxModel',{mode:'single',listeners:{\r\n");
      out.write("  \t\t\tselect:function(model,record,index){\r\n");
      out.write("  \t\t\t\t\tofferingGridStore.reload();\r\n");
      out.write("\t  \t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("    \t\r\n");
      out.write("        var datagrid = Ext.create('Ext.grid.Panel', \r\n");
      out.write("               {el : 'datagrid',layout: 'fit',columnLines: true,autoScroll:true,autoExpandColumn:'action',\r\n");
      out.write("       \t   \t \tselModel:selModel,\r\n");
      out.write("          \t   \tstore : gridstore,\r\n");
      out.write("\t          \tlisteners:{\r\n");
      out.write("\t\t \t\t   \t\tafterRender:function(thisForm, options){\r\n");
      out.write("\t\t\t        \tif(UnieapButton.Offering_Category_Add!=null&&UnieapButton.Offering_Category_Add.abled== true){\r\n");
      out.write("\t\t\t        \t\tExt.getCmp('Offering_Category_Add').show();\r\n");
      out.write("\t\t\t        \t}\r\n");
      out.write("\t\t            }\r\n");
      out.write("\t\t        },\r\n");
      out.write("       \t   \t   \tcolumns:\r\n");
      out.write("       \t   \t   \t[\r\n");
      out.write("       \t   \t   \t\t{ menuDisabled: true,sortable: false, xtype: 'actioncolumn', text: \"");
      out.print(UnieapConstants.getMessage("comm.operation"));
      out.write("\",width:80,items:operationItems},\r\n");
      out.write("       \t   \t   \t\t{ text: \"");
      out.print(UnieapConstants.getMessage("mcare.offering.display.categoryType"));
      out.write("\", dataIndex: 'categoryTypeDesc',sortable: false,width:120},\r\n");
      out.write("       \t   \t   \t\t{ text: \"");
      out.print(UnieapConstants.getMessage("mcare.offering.display.categoreName"));
      out.write("\", dataIndex: 'categoreName', sortable: true,width:120},\r\n");
      out.write("       \t   \t  \t\t{ text: \"");
      out.print(UnieapConstants.getMessage("mcare.offering.display.categoryDesc"));
      out.write("\", dataIndex: 'categoryDesc', sortable: false,width:120},\r\n");
      out.write("       \t   \t  \t\t{ text: \"");
      out.print(UnieapConstants.getMessage("mcare.offering.display.priceDesc"));
      out.write("\", dataIndex: 'priceDesc', sortable: false,width:100},\r\n");
      out.write("       \t   \t  \t\t{ text: \"");
      out.print(UnieapConstants.getMessage("comm.hyperlink"));
      out.write("\", dataIndex: 'detailHyperlink', sortable: false,width:120,\r\n");
      out.write("                    \trenderer: function (value, meta, record){\r\n");
      out.write("    \t\t\t\t\t\tvar max = 150;\r\n");
      out.write("    \t\t\t\t\t\tmeta.tdAttr = 'data-qtip=\"' + value + '\"';\r\n");
      out.write("    \t\t\t\t\t\treturn value.length < max ? value : value.substring(0, max - 3) + '...';\r\n");
      out.write("    \t\t\t\t\t}\t\r\n");
      out.write("                    \r\n");
      out.write("                    },\r\n");
      out.write("       \t   \t   \t\t{ text: \"");
      out.print(UnieapConstants.getMessage("comm.activeFlag"));
      out.write("\",dataIndex: 'activeFlagDesc',sortable: false},\r\n");
      out.write("       \t   \t   \t\t{ text: \"");
      out.print(UnieapConstants.getMessage("comm.createDate"));
      out.write("\",width: 150, dataIndex: 'createDate',sortable: false},\r\n");
      out.write("       \t   \t   \t\t{ text: \"");
      out.print(UnieapConstants.getMessage("comm.modifyDate"));
      out.write("\",width: 150, dataIndex: 'modifyDate',sortable: false},\r\n");
      out.write("       \t   \t   \t\t{ text: \"");
      out.print(UnieapConstants.getMessage("comm.remark"));
      out.write("\", dataIndex: 'remark',width: 200, sortable: false}\r\n");
      out.write("       \t   \t   \t],\r\n");
      out.write("\t       \t   \ttbar:[{ pressed :true,iconCls:'add',\r\n");
      out.write("\t         \t\ttooltip:'");
      out.print(UnieapConstants.getMessage("comm.add"));
      out.write("',text:'");
      out.print(UnieapConstants.getMessage("comm.add"));
      out.write("',xtype:'button',id:'Offering_Category_Add',hidden:true,\r\n");
      out.write("\t\t\t        handler : function(){showForm('Add',null);}\r\n");
      out.write("\t\t\t\t}],\r\n");
      out.write("           \t   \tbbar:new Ext.PagingToolbar(\r\n");
      out.write("           \t   \t{ store : gridstore,displayInfo: true})\r\n");
      out.write("               \t\r\n");
      out.write("        });\r\n");
      out.write("    \tdatagrid.render();\r\n");
      out.write("    \tgridstore.loadPage(1);\r\n");
      out.write("    \t\r\n");
      out.write("    \tvar dataWin = null;\r\n");
      out.write("        var dataForm = null;\r\n");
      out.write("        var operType = '';\r\n");
      out.write("        var previewPictureWinCategory;\r\n");
      out.write("        function showForm(status,record){\r\n");
      out.write("         \toperType = status;\r\n");
      out.write("             if (dataWin==null){\r\n");
      out.write("             \tdataForm = Ext.widget('form',\r\n");
      out.write("             \t{\r\n");
      out.write("                     defaults:{labelAlign: 'left', labelWidth: 90, anchor: '100%'},\r\n");
      out.write("                     bodyPadding:5,\r\n");
      out.write("                     items:\r\n");
      out.write("                     [\r\n");
      out.write("                     \t{xtype:'fieldset', title:'");
      out.print(UnieapConstants.getMessage("comm.data"));
      out.write("',\r\n");
      out.write(" \t                        items:\r\n");
      out.write(" \t                        [\r\n");
      out.write(" \t                        \t{ xtype:'textfield',hidden: true, name:'id'},\r\n");
      out.write(" \t                        \t{ xtype:'textfield',hidden: true, name:'createDate'},\r\n");
      out.write(" \t                        \t{ xtype:'textfield',hidden: true, name:'modifyDate'},\r\n");
      out.write(" \t                        \t{ xtype:'textfield',hidden: true, name:'createBy'},\r\n");
      out.write(" \t                        \t{ xtype:'textfield',hidden: true, name:'modifyBy'},\r\n");
      out.write(" \t                        \t{ xtype:'textfield',hidden: true, name:'seq'},\r\n");
      out.write(" \t                        \t{ xtype:'textfield',hidden: true, name:'detailUrl'},\r\n");
      out.write(" \t                        \t{ xtype:'textfield',hidden: true, name:'planUrl'},\r\n");
      out.write(" \t                        \t{ xtype:'textfield',hidden: true, name:'planHyperlink'},\r\n");
      out.write(" \t                        \t{ xtype:'textfield',hidden: true, name:'questionUrl'},\r\n");
      out.write(" \t                        \t{ xtype:'textfield',hidden: true, name:'questionHyperlink'},\r\n");
      out.write(" \t                        \t{ xtype:'textfield',hidden: true, name:'noteUrl'},\r\n");
      out.write(" \t                        \t{ xtype:'textfield',hidden: true, name:'noteHyperlink'},\r\n");
      out.write(" \t                        \t{ xtype:'combo', labelWidth:120, width:350,forceSelection: true,editable:false,allowBlank:false,\r\n");
      out.write(" \t                                name:'categoryType',fieldLabel:'");
      out.print(UnieapConstants.getMessage("mcare.offering.display.categoryType"));
      out.write("',displayField:'dicName',valueField:'dicCode',\r\n");
      out.write(" \t                                store:Ext.create('Ext.data.Store', \r\n");
      out.write(" \t                                { fields : ['dicCode', 'dicName'],data:UnieapDicdata._offerCategoryType})\r\n");
      out.write(" \t\t\t\t\t\t\t\t},\r\n");
      out.write(" \t                        \t{ xtype:'textfield',labelWidth:120, width:350, name:'categoreName',fieldLabel:'<font color=red>*</font>");
      out.print(UnieapConstants.getMessage("mcare.offering.display.categoreName"));
      out.write("',maxLength:45,allowBlank:false},\r\n");
      out.write(" \t                        \t{ xtype:'textfield',labelWidth:120, width:350, name:'categoryDesc',fieldLabel:'<font color=red>*</font>");
      out.print(UnieapConstants.getMessage("mcare.offering.display.categoryDesc"));
      out.write("',maxLength:255,allowBlank:false},\r\n");
      out.write(" \t                        \t{ xtype:'textfield',labelWidth:120, width:350, name:'priceDesc',fieldLabel:'<font color=red>*</font>");
      out.print(UnieapConstants.getMessage("mcare.offering.display.priceDesc"));
      out.write("',maxLength:255,allowBlank:false},\r\n");
      out.write(" \t                        \t{ xtype:'filefield',name: 'file',id:'uploadFileCategory',labelWidth:120,width:350,fieldLabel:'");
      out.print(UnieapConstants.getMessage("comm.uploadfile"));
      out.write("',msgTarget: 'side',\r\n");
      out.write("\t \t   \t\t\t\t\t\t\tlisteners : {\r\n");
      out.write("\t \t   \t\t\t    \t        \t change : function(obj, v){\r\n");
      out.write("\t \t   \t\t\t    \t        \t\t var picPath = obj.getValue();  \r\n");
      out.write("\t \t   \t\t\t    \t                 var url = 'file:///' + picPath;  \r\n");
      out.write("\t \t   \t\t\t    \t                 if(Ext.isIE){  \r\n");
      out.write("\t \t   \t\t\t    \t                      var image = Ext.get('previewImgCategory');   \r\n");
      out.write("\t \t   \t\t\t    \t                      image.src = Ext.BLANK_IMAGE_URL;  \r\n");
      out.write("\t \t   \t\t\t    \t                      var fileDom = obj.fileInputEl.dom;\r\n");
      out.write("\t \t   \t\t\t    \t                      fileDom.select();\r\n");
      out.write("\t \t   \t\t\t    \t                      image.imgEl.dom.filters.item('DXImageTransform.Microsoft.AlphaImageLoader').src = document.selection.createRange().text;\r\n");
      out.write("\t \t   \t\t\t    \t                      image.filters.item(\"DXImageTransform.Microsoft.AlphaImageLoader\").src = url;   \r\n");
      out.write("\t \t   \t\t\t    \t                 }else{ \r\n");
      out.write("\t \t   \t\t\t    \t                \t  var file = obj.fileInputEl.dom.files[0];\r\n");
      out.write("\t \t   \t\t\t    \t                \t  url = URL.createObjectURL(file);\r\n");
      out.write("\t \t   \t\t\t    \t                 } \r\n");
      out.write("\t \t   \t\t\t    \t                 if(previewPictureWinCategory!=null){\r\n");
      out.write("\t \t   \t\t\t    \t                \t previewPictureWinCategory.destroy();\r\n");
      out.write("\t \t   \t\t\t    \t                 }\r\n");
      out.write("\t \t   \t\t\t    \t                 previewPictureWinCategory = Ext.widget('window', \r\n");
      out.write("\t \t   \t\t\t    \t     \t              { title: '");
      out.print(UnieapConstants.getMessage("comm.data"));
      out.write("', closeAction: 'hide', layout: 'fit', modal: true,width: 400, height: 400,\r\n");
      out.write("\t \t   \t\t\t    \t        \t\t\t \t\titems: {\r\n");
      out.write("\t \t   \t\t\t    \t        \t\t\t \t\t\txtype:'panel',border:false,\r\n");
      out.write("\t \t   \t\t\t    \t        \t\t\t \t\t\thtml:'<img id=\"previewImgCategory\" src='+url+' style=\"filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(sizingMethod=scale);\"></img>'\r\n");
      out.write("\t \t   \t\t\t    \t        \t\t\t \t\t} \r\n");
      out.write("\t \t   \t\t\t    \t        \t\t\t });\r\n");
      out.write("\t \t   \t\t\t    \t                 previewPictureWinCategory.show();\r\n");
      out.write("\t \t   \t\t\t    \t                 resizePreviewPictureWindowCategory();\r\n");
      out.write("\t \t   \t\t\t    \t        \t }\r\n");
      out.write("\t \t   \t\t\t\t\t\t\t},\r\n");
      out.write("\t \t   \t\t\t\t\t\t\tallowBlank:true,anchor: '100%',buttonText:'");
      out.print(UnieapConstants.getMessage("comm.fileupload"));
      out.write("'\r\n");
      out.write("\t \t   \t\t\t\t\t\t},\r\n");
      out.write("\t \t   \t\t\t\t\t\t{ xtype:'textfield',labelWidth:120, width:350,name:'detailHyperlink', fieldLabel:'");
      out.print(UnieapConstants.getMessage("comm.hyperlink"));
      out.write("', allowBlank:true},\r\n");
      out.write(" \t                        \t{ xtype:'combo', labelWidth:120, width:350,forceSelection: true,editable:false,allowBlank:false,\r\n");
      out.write(" \t                                name:'activeFlag',fieldLabel:'");
      out.print(UnieapConstants.getMessage("comm.activeFlag"));
      out.write("',displayField:'dicName',valueField:'dicCode',value:'Y',\r\n");
      out.write(" \t                                store:Ext.create('Ext.data.Store', \r\n");
      out.write(" \t                                { fields : ['dicCode', 'dicName'],data:UnieapDicdata._activeFlag})\r\n");
      out.write(" \t\t\t\t\t\t\t\t},\r\n");
      out.write(" \t                        \t{ xtype:'textareafield',labelWidth:120, width:350, name:'remark',fieldLabel:'");
      out.print(UnieapConstants.getMessage("comm.remark"));
      out.write("',maxLength:255,growMin:60,growMax:100,allowBlank:true}\r\n");
      out.write(" \t                        ]\r\n");
      out.write(" \t                    }\r\n");
      out.write("                     ],\r\n");
      out.write("                     buttons: \r\n");
      out.write("                     [\r\n");
      out.write(" \t                    {id:'formCancel', text: '");
      out.print(UnieapConstants.getMessage("comm.cancel"));
      out.write("',\r\n");
      out.write(" \t                        handler: function(){\r\n");
      out.write(" \t                        \tdataForm.getForm().reset();\r\n");
      out.write(" \t                        \tdataWin.hide();\r\n");
      out.write(" \t                        }\r\n");
      out.write(" \t                    }, \r\n");
      out.write(" \t                    {id:'formSubmit',text: '");
      out.print(UnieapConstants.getMessage("comm.submit"));
      out.write("',\r\n");
      out.write(" \t                        handler: function(){\r\n");
      out.write(" \t                        \tvar form = dataForm.getForm();\r\n");
      out.write(" \t                            var previewImg = document.getElementById('previewImgCategory');\r\n");
      out.write(" \t                            var fileOriginalName = form.findField('uploadFileCategory').getValue();\r\n");
      out.write(" \t                            if(fileOriginalName != '' && fileOriginalName != null){\r\n");
      out.write("\t \t                          \tif(checkFileType(fileOriginalName)){\r\n");
      out.write("\t \t                          \t\tvar pWidth =235 , pHeight = 215;\r\n");
      out.write(" \t                             \t\tif(previewImg.width< pWidth-20 ||previewImg.width >pWidth+20 || previewImg.height< pHeight-20 ||previewImg.height >pHeight+20){\r\n");
      out.write(" \t                                 \t\tExt.MessageBox.show({title: '");
      out.print(UnieapConstants.getMessage("comm.status"));
      out.write("',\r\n");
      out.write(" \t                                 \t\t\tmsg:'");
      out.print(UnieapConstants.getMessage("comm.fileupload.filesize","235,215"));
      out.write("',\r\n");
      out.write(" \t                                  \t\t\tbuttons: Ext.MessageBox.OK,icon:Ext.MessageBox.ERROR});\r\n");
      out.write(" \t                                 \t\treturn;\r\n");
      out.write(" \t                                 \t}else{\r\n");
      out.write(" \t                                 \t\tsubmitCategory(form);\r\n");
      out.write(" \t                                 \t}\r\n");
      out.write("\t \t                             \t\t\r\n");
      out.write("\t \t                          \t}else{\r\n");
      out.write("\t \t                          \t\tExt.MessageBox.show({title: '");
      out.print(UnieapConstants.getMessage("comm.status"));
      out.write("',\r\n");
      out.write("\t \t                          \t\t\tmsg:'");
      out.print(UnieapConstants.getMessage("comm.fileupload.filetype",".jpg|.png"));
      out.write("',\r\n");
      out.write("\t \t                           \t\t\tbuttons: Ext.MessageBox.OK,icon:Ext.MessageBox.ERROR});\r\n");
      out.write("\t \t                          \t}\r\n");
      out.write(" \t                          \t}else{\r\n");
      out.write(" \t                          \t\tsubmitCategory(form);\r\n");
      out.write(" \t                          \t}\r\n");
      out.write(" \t                        }\r\n");
      out.write(" \t                    }\r\n");
      out.write("                     ]\r\n");
      out.write("                 });\r\n");
      out.write("                 dataWin = Ext.widget('window', \r\n");
      out.write("                 { title: '");
      out.print(UnieapConstants.getMessage("comm.data"));
      out.write("', closeAction: 'hide', width: 400, height: 360, layout: 'fit', modal: true, items: dataForm,defaultFocus: 'roleName' });\r\n");
      out.write("             }\r\n");
      out.write("             if(operType=='Add'){\r\n");
      out.write("             \tdataForm.getForm().reset();\r\n");
      out.write("             \tdataWin.show();\r\n");
      out.write("             }else if(operType=='Modify'){\r\n");
      out.write("             \tdataWin.show();\r\n");
      out.write("             \tdataForm.getForm().setValues(selectedRecord.data);\r\n");
      out.write("             }else{\r\n");
      out.write("             \tdataWin.show();\r\n");
      out.write("             }\r\n");
      out.write(" \t    }\r\n");
      out.write("        \r\n");
      out.write("        function submitCategory(form){\r\n");
      out.write("        \tvar id = form.findField('id').getValue();\r\n");
      out.write("        \tvar categoryType = form.findField('categoryType').getValue();\r\n");
      out.write("        \tvar categoreName = form.findField('categoreName').getValue();\r\n");
      out.write("        \t//var seq = form.findField('seq').getValue();\r\n");
      out.write("        \tvar categoryDesc = form.findField('categoryDesc').getValue();\r\n");
      out.write("        \t//var pictureUrl = form.findField('pictureUrl').getValue();\r\n");
      out.write("        \tvar priceDesc = form.findField('priceDesc').getValue();\r\n");
      out.write("        \tvar activeFlag = form.findField('activeFlag').getValue();\r\n");
      out.write("        \t//var createDate = form.findField('createDate').getValue();\r\n");
      out.write("        \t//var createBy = form.findField('createBy').getValue();\r\n");
      out.write("        \t//var modifyDate = form.findField('modifyDate').getValue();\r\n");
      out.write("        \t//var modifyBy = form.findField('modifyBy').getValue();\r\n");
      out.write("        \tvar remark = form.findField('remark').getValue();\r\n");
      out.write("        \t//var detailUrl = form.findField('detailUrl').getValue();\r\n");
      out.write("        \tvar detailHyperlink = form.findField('detailHyperlink').getValue();\r\n");
      out.write("        \t//var planUrl = form.findField('planUrl').getValue();\r\n");
      out.write("        \t//var planHyperlink = form.findField('planHyperlink').getValue();\r\n");
      out.write("        \t//var questionUrl = form.findField('questionUrl').getValue();\r\n");
      out.write("        \t//var questionHyperlink = form.findField('questionHyperlink').getValue();\r\n");
      out.write("        \t//var noteUrl = form.findField('noteUrl').getValue();\r\n");
      out.write("        \t//var noteHyperlink = form.findField('noteHyperlink').getValue();\r\n");
      out.write("        \tvar parameters = Ext.JSON.encode({\r\n");
      out.write("        \t\t\t'id':id,'categoryType':categoryType,\r\n");
      out.write("        \t\t\t'categoreName':categoreName,'categoryDesc':categoryDesc,\r\n");
      out.write("        \t\t\t'priceDesc':priceDesc,'activeFlag':activeFlag,\r\n");
      out.write("        \t\t\t'remark':remark,'detailHyperlink':detailHyperlink\r\n");
      out.write("        \t\t})\r\n");
      out.write("        \tif (form.isValid()){\r\n");
      out.write("                 form.submit({\r\n");
      out.write("                     clientValidation: true,\r\n");
      out.write("                     method: 'POST',\r\n");
      out.write("                     params:{'operType1':operType},\r\n");
      out.write("                     waitMsg: '");
      out.print(UnieapConstants.getMessage("comm.processing"));
      out.write("',\r\n");
      out.write("                     url: 'easyMobileController.do?method=offerCategoryDeal&operType='+operType+'&parameters='+encodeURL(parameters),\r\n");
      out.write("                     success: function(form, action) {\r\n");
      out.write("                    \tvar result = Ext.JSON.decode(action.response.responseText);\r\n");
      out.write("\t                    if(result.isSuccess == 'failed'){\r\n");
      out.write("\t                    \tExt.MessageBox.show({title: '");
      out.print(UnieapConstants.getMessage("comm.status"));
      out.write("',msg:result.message,\r\n");
      out.write("                     \t\t\tbuttons: Ext.MessageBox.OK,icon:Ext.MessageBox.ERROR});\r\n");
      out.write("\t                    }else{\r\n");
      out.write("                         \tExt.MessageBox.show({title: '");
      out.print(UnieapConstants.getMessage("comm.status"));
      out.write("',msg:'");
      out.print(UnieapConstants.getMessage("comm.success.save"));
      out.write("',fn: showResult,\r\n");
      out.write("                        \t\t\tbuttons: Ext.MessageBox.OK,icon:Ext.MessageBox.INFO});\r\n");
      out.write("\t                    }\r\n");
      out.write("                     },\r\n");
      out.write("                     failure: function(form, action){\r\n");
      out.write("                    \t Ext.MessageBox.show({title: '");
      out.print(UnieapConstants.getMessage("comm.status"));
      out.write("',msg:action.response.responseText,\r\n");
      out.write("                 \t\t\tbuttons: Ext.MessageBox.OK,icon:Ext.MessageBox.ERROR});\r\n");
      out.write("                     }\r\n");
      out.write("                 });\r\n");
      out.write("        \t }\r\n");
      out.write("        \t\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write(" \t\t\r\n");
      out.write(" \t\tfunction showResult(btn){\r\n");
      out.write(" \t     \tdataWin.hide();\r\n");
      out.write(" \t     \tgridstore.reload();\r\n");
      out.write(" \t    }\r\n");
      out.write("    \t\r\n");
      out.write("    \t\r\n");
      out.write("        \r\n");
      out.write("        Ext.define('offeringModel', {\r\n");
      out.write("            extend: 'Ext.data.Model',\r\n");
      out.write("            fields:\r\n");
      out.write("            [\r\n");
      out.write("            \t'id','offeringId','offeringCode','offeringName','seq','offeringType','offeringTypeDesc','offeringDesc','effectiveType','effectiveTypeDesc','feeAmount',\r\n");
      out.write("            \t'categoryId','activeFlag','activeFlagDesc','createDate','createBy','modifyDate','modifyBy','remark'\r\n");
      out.write("            ],\r\n");
      out.write("            idProperty: 'id'\r\n");
      out.write("        });\r\n");
      out.write("    \tvar offeringGridStore = Ext.create('Ext.data.Store', {\r\n");
      out.write("            model: 'offeringModel',\r\n");
      out.write("            pageSize: 15,\r\n");
      out.write("            remoteSort: true,\r\n");
      out.write("            proxy:{ type: 'ajax', url: 'easyMobileController.do?method=offeringGrid',\r\n");
      out.write("                reader: \r\n");
      out.write("                {root: 'rows', totalProperty: 'totalCount'},\r\n");
      out.write("                simpleSortMode: true\r\n");
      out.write("            },\r\n");
      out.write("            sorters: [{ property: 'offeringName', direction: 'ASC'}]\r\n");
      out.write("        });\r\n");
      out.write("    \tofferingGridStore.on('beforeload', function (store, options){\r\n");
      out.write("    \t\tvar rec = datagrid.getSelectionModel().getSelection();\r\n");
      out.write("    \t\tvar categoryId = -1;\r\n");
      out.write("    \t\tif(rec.length>0){\r\n");
      out.write("    \t\t\tcategoryId = rec[0].get(\"id\");\r\n");
      out.write("    \t\t}\r\n");
      out.write("            Ext.apply(store.proxy.extraParams,{categoryId:categoryId});\r\n");
      out.write("        });\r\n");
      out.write("    \t\r\n");
      out.write("    \tvar offeringSelModel = Ext.create('Ext.selection.CheckboxModel',{mode:'single'});\r\n");
      out.write("    \tvar offeringOperationItems = [];\r\n");
      out.write("    \tvar selectedRecordOffering;\r\n");
      out.write("    \tif(UnieapButton.Offering_Modify!=null&&UnieapButton.Offering_Modify.abled==true){\r\n");
      out.write("    \t\tofferingOperationItems.push({iconCls :'',tooltip:''});\r\n");
      out.write("    \t\tofferingOperationItems.push({\r\n");
      out.write("\t    \t\ticonCls : 'edit',\r\n");
      out.write("\t     \t   \ttooltip: '");
      out.print(UnieapConstants.getMessage("comm.modify"));
      out.write("',\r\n");
      out.write("\t           \thandler:function(grid, rowIndex, colIndex){\t\r\n");
      out.write("\t           \t\tselectedRecordOffering = grid.getStore().getAt(rowIndex);\r\n");
      out.write("\t        \t\tshowFormOffering('Modify',selectedRecord);\r\n");
      out.write("\t           \t}\r\n");
      out.write("\t        });\r\n");
      out.write("    \t}\r\n");
      out.write("    \t\r\n");
      out.write("    \tvar offeringDatagrid = Ext.create('Ext.grid.Panel', \r\n");
      out.write("    \t        {el : 'offeringgrid',layout: 'fit',columnLines: true,autoScroll:true,autoExpandColumn:'action',\r\n");
      out.write("    \t\t   \t \tselModel:offeringSelModel,title: '");
      out.print(UnieapConstants.getMessage("comm.list"));
      out.write("',\r\n");
      out.write("    \t   \t   \t\tstore : offeringGridStore,\r\n");
      out.write("\t    \t   \t   \tlisteners:{\r\n");
      out.write("\t\t \t\t   \t\tafterRender:function(thisForm, options){\r\n");
      out.write("\t\t\t\t        \tif(UnieapButton.Offering_Add!=null&&UnieapButton.Offering_Add.abled== true){\r\n");
      out.write("\t\t\t\t        \t\tExt.getCmp('Offering_Add').show();\r\n");
      out.write("\t\t\t\t        \t}\r\n");
      out.write("\t\t\t            }\r\n");
      out.write("\t\t\t        },\r\n");
      out.write("    \t\t   \t   \tcolumns:\r\n");
      out.write("    \t\t   \t   \t[\r\n");
      out.write("\t\t\t\t\t\t{ menuDisabled: true,sortable: false, xtype: 'actioncolumn', text: \"");
      out.print(UnieapConstants.getMessage("comm.operation"));
      out.write("\",width:80,items:offeringOperationItems},\r\n");
      out.write("    \t\t   \t   \t\t{ text: \"");
      out.print(UnieapConstants.getMessage("mcare.offering.display.offeringId"));
      out.write("\",dataIndex: 'offeringId',width:120},\r\n");
      out.write("    \t\t   \t   \t\t{ text: \"");
      out.print(UnieapConstants.getMessage("mcare.offering.display.offeringName"));
      out.write("\",dataIndex: 'offeringName',width:120},\r\n");
      out.write("    \t\t   \t   \t\t{ text: \"");
      out.print(UnieapConstants.getMessage("mcare.offering.display.offeringType"));
      out.write("\",dataIndex: 'offeringTypeDesc',width:120},\r\n");
      out.write("    \t\t   \t \t\t{ text: \"");
      out.print(UnieapConstants.getMessage("mcare.offering.display.feeAmount"));
      out.write("\",dataIndex: 'feeAmount',width:120},\r\n");
      out.write("    \t\t   \t   \t\t{ text: \"");
      out.print(UnieapConstants.getMessage("comm.activeFlag"));
      out.write("\",dataIndex: 'activeFlagDesc',sortable: false,width:120},\r\n");
      out.write("    \t\t   \t   \t    { text: \"");
      out.print(UnieapConstants.getMessage("comm.remark"));
      out.write("\", dataIndex: 'remark',width: 200, sortable: false}\r\n");
      out.write("    \t\t   \t   \t],\r\n");
      out.write("    \t \t\t   \ttbar:[{ pressed :true,iconCls:'add',\r\n");
      out.write("    \t\t             \t\ttooltip:'");
      out.print(UnieapConstants.getMessage("comm.add"));
      out.write("',text:'");
      out.print(UnieapConstants.getMessage("comm.add"));
      out.write("',xtype:'button',id:'Offering_Add',hidden:true,\r\n");
      out.write("    \t\t            \t\thandler : function(){showFormOffering(\"Add\",null);}\r\n");
      out.write("    \t\t    \t}],\r\n");
      out.write("               \t   \tbbar:new Ext.PagingToolbar(\r\n");
      out.write("                       \t   \t{ store : offeringGridStore,displayInfo: true})\r\n");
      out.write("    \t        });\r\n");
      out.write("    \tofferingDatagrid.render();\r\n");
      out.write("    \t//offeringGridStore.loadPage(1);\r\n");
      out.write("       var dataWinOffering = null;\r\n");
      out.write("       var dataFormOffering = null;\r\n");
      out.write("       var operTypeOffering = '';\r\n");
      out.write("       function showFormOffering(status,record){\r\n");
      out.write("    \t   operTypeOffering = status;\r\n");
      out.write("    \t   var rec = datagrid.getSelectionModel().getSelection();\r\n");
      out.write(" \t\t\tif(rec.length==0){\r\n");
      out.write("       \t\tExt.MessageBox.show({\r\n");
      out.write("       \t           title: '");
      out.print(UnieapConstants.getMessage("comm.tipInfo"));
      out.write("',\r\n");
      out.write("       \t           msg: '");
      out.print(UnieapConstants.getMessage("comm.select.oneRecord"));
      out.write("',\r\n");
      out.write("       \t           buttons: Ext.MessageBox.OK,\r\n");
      out.write("       \t           icon: Ext.MessageBox.INFO\r\n");
      out.write("       \t       });\r\n");
      out.write("\t       \t}else{\r\n");
      out.write("\t       \t\tif (dataWinOffering==null){\r\n");
      out.write("\t            \tdataFormOffering = Ext.widget('form',\r\n");
      out.write("\t            \t{\r\n");
      out.write("\t                    defaults:{labelAlign: 'left', labelWidth: 90, anchor: '100%'},\r\n");
      out.write("\t                    bodyPadding:5,\r\n");
      out.write("\t                    items:\r\n");
      out.write("\t                    [\r\n");
      out.write("\t                    \t{xtype:'fieldset', title:'");
      out.print(UnieapConstants.getMessage("comm.data"));
      out.write("',\r\n");
      out.write("\t\t                        items:\r\n");
      out.write("\t\t                        [\r\n");
      out.write("\t\t                        \t{ xtype:'textfield',hidden: true, name:'id'},\r\n");
      out.write("\t\t                        \t{ xtype:'textfield',hidden: true, name:'createDate'},\r\n");
      out.write("\t\t                        \t{ xtype:'textfield',hidden: true, name:'modifyDate'},\r\n");
      out.write("\t\t                        \t{ xtype:'textfield',hidden: true, name:'createBy'},\r\n");
      out.write("\t\t                        \t{ xtype:'textfield',hidden: true, name:'modifyBy'},\r\n");
      out.write("\t\t                        \t{ xtype:'textfield',hidden: true, name:'offeringCode'},\r\n");
      out.write("\t\t                        \t{ xtype:'textfield',hidden: true, name:'seq'},\r\n");
      out.write("\t\t                        \t{ xtype:'textfield',hidden: true, name:'offeringDesc'},\r\n");
      out.write("\t\t                        \t{ xtype:'textfield',hidden: true, name:'categoryId'},\r\n");
      out.write("\t\t                        \t{ xtype:'textfield',hidden: true, name:'effectiveType'},\r\n");
      out.write("\t\t                        \t{ xtype:'textfield',labelWidth:120, width:350, name:'offeringId',fieldLabel:'<font color=red>*</font>");
      out.print(UnieapConstants.getMessage("mcare.offering.display.offeringId"));
      out.write("',maxLength:45,allowBlank:false},\r\n");
      out.write("\t\t                        \t{ xtype:'textfield',labelWidth:120, width:350, name:'offeringName',fieldLabel:'<font color=red>*</font>");
      out.print(UnieapConstants.getMessage("mcare.offering.display.offeringName"));
      out.write("',maxLength:45,allowBlank:false},\r\n");
      out.write("\t\t                        \t{ xtype:'combo', labelWidth:120, width:350,forceSelection: true,editable:false,allowBlank:false,\r\n");
      out.write("\t\t                                name:'offeringType',fieldLabel:'");
      out.print(UnieapConstants.getMessage("mcare.offering.display.offeringType"));
      out.write("',displayField:'dicName',valueField:'dicCode',\r\n");
      out.write("\t\t                                store:Ext.create('Ext.data.Store', \r\n");
      out.write("\t\t                                { fields : ['dicCode', 'dicName'],data:UnieapDicdata._offeringType})\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t                        \t{ xtype:'textfield',labelWidth:120, width:350, name:'feeAmount',fieldLabel:'<font color=red>*</font>");
      out.print(UnieapConstants.getMessage("mcare.offering.display.feeAmount"));
      out.write("',maxLength:45,allowBlank:false},\r\n");
      out.write("\t\t                        \t{ xtype:'combo', labelWidth:120, width:350,forceSelection: true,editable:false,allowBlank:false,\r\n");
      out.write("\t\t                                name:'activeFlag',fieldLabel:'");
      out.print(UnieapConstants.getMessage("comm.activeFlag"));
      out.write("',displayField:'dicName',valueField:'dicCode',value:'Y',\r\n");
      out.write("\t\t                                store:Ext.create('Ext.data.Store', \r\n");
      out.write("\t\t                                { fields : ['dicCode', 'dicName'],data:UnieapDicdata._activeFlag})\r\n");
      out.write("\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t                        \t{ xtype:'textareafield',labelWidth:120, width:350, name:'remark',fieldLabel:'");
      out.print(UnieapConstants.getMessage("comm.remark"));
      out.write("',maxLength:255,growMin:60,growMax:100,allowBlank:true}\r\n");
      out.write("\t\t                        ]\r\n");
      out.write("\t\t                    }\r\n");
      out.write("\t                    ],\r\n");
      out.write("\t                    buttons: \r\n");
      out.write("\t                    [\r\n");
      out.write("\t\t                    {id:'formOfferingCancel', text: '");
      out.print(UnieapConstants.getMessage("comm.cancel"));
      out.write("',\r\n");
      out.write("\t\t                        handler: function(){\r\n");
      out.write("\t\t                        \tdataFormOffering.getForm().reset();\r\n");
      out.write("\t\t                        \tdataWinOffering.hide();\r\n");
      out.write("\t\t                        }\r\n");
      out.write("\t\t                    }, \r\n");
      out.write("\t\t                    {id:'formOfferingSubmit',text: '");
      out.print(UnieapConstants.getMessage("comm.submit"));
      out.write("',\r\n");
      out.write("\t\t                        handler: function(){\r\n");
      out.write("\t\t                        \tvar form = dataFormOffering.getForm();\r\n");
      out.write("\t\t                        \t if (form.isValid()){\r\n");
      out.write("\t\t                                 form.submit({\r\n");
      out.write("\t\t                                     clientValidation: true,\r\n");
      out.write("\t\t                                     method: 'POST',\r\n");
      out.write("\t\t                                     params:{'operType':operTypeOffering},\r\n");
      out.write("\t\t                                     waitMsg: '");
      out.print(UnieapConstants.getMessage("comm.processing"));
      out.write("',\r\n");
      out.write("\t\t                                     url: 'easyMobileController.do?method=offeringDeal',\r\n");
      out.write("\t\t                                     success: function(form, action) {\r\n");
      out.write("\t\t                                    \tvar result = Ext.JSON.decode(action.response.responseText);\r\n");
      out.write("\t\t\t\t\t\t\t                    if(result.isSuccess == 'failed'){\r\n");
      out.write("\t\t\t\t\t\t\t                    \tExt.MessageBox.show({title: '");
      out.print(UnieapConstants.getMessage("comm.status"));
      out.write("',msg:result.message,\r\n");
      out.write("\t\t\t                                 \t\t\tbuttons: Ext.MessageBox.OK,icon:Ext.MessageBox.ERROR});\r\n");
      out.write("\t\t\t\t\t\t\t                    }else{\r\n");
      out.write("\t \t\t                                    \tExt.MessageBox.show({title: '");
      out.print(UnieapConstants.getMessage("comm.status"));
      out.write("',msg:'");
      out.print(UnieapConstants.getMessage("comm.success.save"));
      out.write("',fn: showResultOffering,\r\n");
      out.write("\t\t \t\t                               \t\t\tbuttons: Ext.MessageBox.OK,icon:Ext.MessageBox.INFO});\r\n");
      out.write("\t\t\t\t\t\t\t                    }\r\n");
      out.write("\t\t                                     },\r\n");
      out.write("\t\t                                     failure: function(form, action){\r\n");
      out.write("\t\t                                    \t Ext.MessageBox.show({title: '");
      out.print(UnieapConstants.getMessage("comm.status"));
      out.write("',msg:action.response.responseText,\r\n");
      out.write("\t\t                                 \t\t\tbuttons: Ext.MessageBox.OK,icon:Ext.MessageBox.ERROR});\r\n");
      out.write("\t\t                                     }\r\n");
      out.write("\t\t                                 });\r\n");
      out.write("\t\t                        \t }\r\n");
      out.write("\t\t                        }\r\n");
      out.write("\t\t                    }\r\n");
      out.write("\t                    ]\r\n");
      out.write("\t                });\r\n");
      out.write("\t                dataWinOffering = Ext.widget('window', \r\n");
      out.write("\t                { title: '");
      out.print(UnieapConstants.getMessage("comm.data"));
      out.write("', closeAction: 'hide', width: 400, height: 300, layout: 'fit', modal: true, items:dataFormOffering,defaultFocus: 'offeringName' });\r\n");
      out.write("\t            }\r\n");
      out.write("\t            if(operTypeOffering=='Add'){\r\n");
      out.write("\t            \tdataFormOffering.getForm().reset();\r\n");
      out.write("\t            \tvar rec = datagrid.getSelectionModel().getSelection();\r\n");
      out.write("\t            \tdataFormOffering.getForm().findField('categoryId').setValue(rec[0].data.id);\r\n");
      out.write("\t            \tif(rec[0].data.categoryType=='ct_me'){\r\n");
      out.write("\t            \t\tdataFormOffering.getForm().findField('offeringType').setReadOnly(true);\r\n");
      out.write("\t            \t\tdataFormOffering.getForm().findField('offeringType').inputEl.addCls('readonly_field');\r\n");
      out.write("\t\t            \tdataFormOffering.getForm().findField('offeringType').setValue('P');\r\n");
      out.write("\t            \t}else if(rec[0].data.categoryType=='ct_vas'){\r\n");
      out.write("\t            \t\tdataFormOffering.getForm().findField('offeringType').setReadOnly(true);\r\n");
      out.write("\t            \t\tdataFormOffering.getForm().findField('offeringType').inputEl.addCls('readonly_field');\r\n");
      out.write("\t\t            \tdataFormOffering.getForm().findField('offeringType').setValue('S');\r\n");
      out.write("\t            \t}\r\n");
      out.write("\t            \tdataWinOffering.show();\r\n");
      out.write("\t            }else if(operTypeOffering=='Modify'){\r\n");
      out.write("\t            \tdataWinOffering.show();\r\n");
      out.write("\t            \tdataFormOffering.getForm().setValues(selectedRecordOffering.data);\r\n");
      out.write("\t            \tif(rec[0].data.categoryType=='ct_me'){\r\n");
      out.write("\t            \t\tdataFormOffering.getForm().findField('offeringType').setReadOnly(true);\r\n");
      out.write("\t            \t\tdataFormOffering.getForm().findField('offeringType').inputEl.addCls('readonly_field');\r\n");
      out.write("\t\t            \tdataFormOffering.getForm().findField('offeringType').setValue('P');\r\n");
      out.write("\t            \t}else if(rec[0].data.categoryType=='ct_vas'){\r\n");
      out.write("\t            \t\tdataFormOffering.getForm().findField('offeringType').setReadOnly(true);\r\n");
      out.write("\t            \t\tdataFormOffering.getForm().findField('offeringType').inputEl.addCls('readonly_field');\r\n");
      out.write("\t\t            \tdataFormOffering.getForm().findField('offeringType').setValue('S');\r\n");
      out.write("\t            \t}\r\n");
      out.write("\t            }else{\r\n");
      out.write("\t            \tdataWinOffering.show();\r\n");
      out.write("\t            }\r\n");
      out.write("\t       \t}\r\n");
      out.write("\t    }\r\n");
      out.write("\t\tfunction showResultOffering(btn){\r\n");
      out.write("\t     \tdataWinOffering.hide();\r\n");
      out.write("\t     \tofferingGridStore.reload();\r\n");
      out.write("\t    }\r\n");
      out.write("\t\t/***round task********************************************/\r\n");
      out.write("\t      var taskCategory;\r\n");
      out.write("\t   \t  function resizePreviewPictureWindowCategory(){\r\n");
      out.write("\t   \t\t     if(taskCategory == null){\r\n");
      out.write("\t   \t\t    \ttaskCategory = {\r\n");
      out.write("\t   \t\t\t   \t\t\trun : function(){\r\n");
      out.write("\t\t\t   \t\t\t   \t\t var previewImgCategory = document.getElementById('previewImgCategory');\r\n");
      out.write("\t\t\t   \t\t   \t    \t if(previewImgCategory!=null){\r\n");
      out.write("\t\t\t   \t\t\t   \t    \t if(previewImgCategory.height > 10){\r\n");
      out.write("\t\t\t   \t\t\t   \t    \t\t if(previewImgCategory.width>300){\r\n");
      out.write("\t\t\t   \t\t\t   \t    \t\t\tpreviewPictureWinCategory.setWidth(400);\r\n");
      out.write("\t\t\t   \t\t\t   \t    \t\t }else{\r\n");
      out.write("\t\t\t   \t\t\t   \t    \t\t\tpreviewPictureWinCategory.setWidth(previewImgCategory.width);\r\n");
      out.write("\t\t\t   \t\t\t   \t    \t\t }\r\n");
      out.write("\t\t\t   \t\t\t   \t    \t\t if(previewImgCategory.height>300){\r\n");
      out.write("\t\t\t   \t\t\t   \t    \t\t\tpreviewPictureWinCategory.setHeight(400);\r\n");
      out.write("\t\t\t   \t\t\t   \t    \t\t }else{\r\n");
      out.write("\t\t\t   \t\t\t  \t    \t\t \tpreviewPictureWinCategory.setHeight(previewImgCategory.height);\r\n");
      out.write("\t\t\t   \t\t\t   \t    \t\t }\r\n");
      out.write("\t\t\t   \t\t\t  \t    \t\t previewPictureWinCategory.center();\r\n");
      out.write("\t\t\t   \t\t\t  \t    \t\t Ext.TaskManager.stop(taskCategory);   \r\n");
      out.write("\t\t\t   \t\t\t   \t    \t }\r\n");
      out.write("\t\t\t   \t\t   \t    \t }\r\n");
      out.write("\t   \t\t\t   \t\t\t},\r\n");
      out.write("\t   \t\t\t   \t\t\tinterval : 500\r\n");
      out.write("\t   \t\t\t   \t\t}\r\n");
      out.write("\t   \t\t   \t\tExt.TaskManager.start(taskCategory);\r\n");
      out.write("\t   \t\t     }else{\r\n");
      out.write("\t   \t\t    \tExt.TaskManager.start(taskCategory);\r\n");
      out.write("\t   \t\t     }\r\n");
      out.write("\t   \t    }\r\n");
      out.write("      \r\n");
      out.write("\t});\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div id=\"datagrid\"></div>\r\n");
      out.write("    <div id=\"offeringgrid\"></div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
